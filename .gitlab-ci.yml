stages:
    - sonarqube-check
    - sonarqube-vulnerability-report

sonarqube-check:
  stage: sonarqube-check
  image: 
    name: sonarsource/sonar-scanner-cli:5.0
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - echo Here
    - ls
    - ls sonar
    - cat sonar/sonar-project.properties
    - sonar-scanner -Dsonar.projectKey=$SONAR_KEY -X
  allow_failure: true
  only:
    - merge_requests
    - master
    - main
    - develop
    - sonar

sonarqube-vulnerability-report:
  stage: sonarqube-vulnerability-
  before_script:
    - apt-get update && apt-get install -y curl
  script:
    - 'curl -u "${SONAR_TOKEN}:" "${SONAR_HOST_URL}/api/issues/gitlab_sast_export?projectKey=mif10-groupe-16_m1if10-groupe-16_AY6KmI2au4zgX3p-IR_e&branch=${CI_COMMIT_BRANCH}&pullRequest=${CI_MERGE_REQUEST_IID}" -o gl-sast-sonar-report.json'
  allow_failure: true
  only:
    - merge_requests
    - master
    - main
    - develop
    - sonar
  artifacts:
    expire_in: 1 day
    reports:
      sast: gl-sast-sonar-report.json
  dependencies:
    - sonarqube-check
