variables:
  MYSQL_DATABASE: $MYSQL_DB
  MYSQL_ROOT_PASSWORD: $MYSQL_PASS
  MYSQL_USER: $MYSQL_USER
  MYSQL_PASSWORD: $MYSQL_PASS

stages:
  - build
  - test
  - sonarqube
  - deploy
  

cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
        - .apt/
        - $CI_PROJECT_DIR/.cache/pip

default:
  image: ubuntu:22.04
  #
  # Pick zero or more services to be used on all builds.
  # Only needed when using a docker container to run your tests in.
  # Check out: https://docs.gitlab.com/ee/ci/services/index.html
  services:
    - postgres:16.2
  #
  # This folder is cached between builds
  # http://docs.gitlab.com/ee/ci/yaml/README.html#cache
  

migrations:
  stage: build 
  before_script:
    - export APT_DIR=.apt
    - export APT_STATE_LISTS=$APT_DIR/lists
    - export APT_CACHE_ARCHIVES=$APT_DIR/archives
    - mkdir -p $APT_CACHE_ARCHIVES/partial
    - apt -yq update
    - apt install --no-install-recommends -y  -o dir::cache::archives="$APT_CACHE_ARCHIVES" python3 python3-pip python3.10-venv openssh-client
    - apt -y upgrade
    - python3 -m venv ~/.venv
    - source ~/.venv/bin/activate
    - pip3 install --upgrade pip 
    - pip3 install -r requirements.txt
  script:
    - source ~/.venv/bin/activate
    - python3 ./backend/manage.py makemigrations
    # - python3 manage.py makemigrations myapp
    - python3 ./backend/manage.py migrate --fake
    - python3 ./backend/manage.py makemigrations
    - python3 ./backend/manage.py check


django-tests:
  stage: test
  before_script:
    - apt -yq update
    - apt install --no-install-recommends -y  -o dir::cache::archives="$APT_CACHE_ARCHIVES" python3 python3-pip python3.10-venv openssh-client
    - python3 -m venv ~/.venv
    - source ~/.venv/bin/activate
    - pip3 install --upgrade pip 
    - pip3 install -r requirements.txt
  script:
    - source ~/.venv/bin/activate
    # The MYSQL user only gets permissions for MYSQL_DB, so Django can't create a test database.
    # - echo "GRANT ALL on *.* to '${MYSQL_USER}';"| mysql -u root --password="${MYSQL_ROOT_PASSWORD}" -h mysql
    # use python3 explicitly. see https://wiki.ubuntu.com/Python/3
    - python3 ./backend/manage.py test

pylint:
  stage: test
  image: python:3.11
  script:
    - pip install --upgrade pip
    - pip install -r requirements.txt
    - pylint ./backend/backend/**/.py
    - pylint ./backend/greenimpact/**/.py
  only:
    - merge_requests
    - main
    - sonar
    - CI/CD
    - back

sonarqube-check:
  stage: sonarqube
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner -X -Dproject.settings=sonar/sonar-project.properties
  allow_failure: true
  only:
    - merge_requests
    - master
    - main
    - develop
    - sonar
    - CI/CD
    - back

sonarqube-vulnerability-report:
  stage: sonarqube
  before_script:
    - apt-get update
    - apt-get install --no-install-recommends -y -o dir::cache::archives="$APT_CACHE_ARCHIVES" curl 
  script:
    - 'curl -u "${SONAR_TOKEN}:" "${SONAR_HOST_URL}/api/issues/gitlab_sast_export?projectKey=mif10-groupe-16_m1if10-groupe-16_AY6KmI2au4zgX3p-IR_e&branch=${CI_COMMIT_BRANCH}&pullRequest=${CI_MERGE_REQUEST_IID}" -o gl-sast-sonar-report.json'
  allow_failure: true
  only:
    - merge_requests
    - master
    - main
    - develop
    - sonar
    - CI/CD
    - back
  artifacts:
    expire_in: 1 day
    reports:
      sast: gl-sast-sonar-report.json
  dependencies:
    - sonarqube-check

deploy:
  stage: deploy   
  script:   
    - apt -yq update
    - apt install --no-install-recommends -y -o dir::cache::archives="$APT_CACHE_ARCHIVES" openssh-client
    - chmod 400 $GITLABCI_SSH_KEY
    - scp -o StrictHostKeyChecking=no -i $GITLABCI_SSH_KEY -r ./backend/ ./frontend/ requirements.txt gitlabci@192.168.75.19:~ 
  environment: production
